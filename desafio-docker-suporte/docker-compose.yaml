version: "3"

services:
  app:
    build: ./app
    container_name: app
    tty: true
    volumes:
      - ./app:/usr/src/app
    ports:
      - "3000:3000"
    depends_on:
      database:
        condition: service_healthy # inserido uma condição para esperar o 'database' iniciar corretamente antes do serviço ser iniciado
    restart: on-failure

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:80"
    depends_on:
      app:
        condition: service_started # condição para esperar o 'app' iniciar

  database:
    image: mysql:5.7
    container_name: database
    tty: true
    restart: always
    volumes:
      - mysql:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql # entrypoint configurado para executar o arquivo 'init.sql'
    ports:
      - "3307:3306"
    environment:
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
    healthcheck: # verificação se o sistema foi iniciado completamente antes de iniciar o próximo serviço. Foi inserido um periodo de espera longo visualizando a primeira execução do docker.
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -proot"]
      interval: 10s
      timeout: 15s
      retries: 5
      start_period: 300s

volumes:
  mysql:
    driver: local
